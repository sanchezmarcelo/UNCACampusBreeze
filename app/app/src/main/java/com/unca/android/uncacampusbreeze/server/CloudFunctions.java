package com.unca.android.uncacampusbreeze.server;

import androidx.annotation.NonNull;

import com.google.android.gms.tasks.Continuation;
import com.google.android.gms.tasks.Task;
import com.google.firebase.functions.FirebaseFunctions;
import com.google.firebase.functions.HttpsCallableResult;

import java.util.HashMap;
import java.util.Map;

class CloudFunctions {

    private static FirebaseFunctions functions = FirebaseFunctions.getInstance();

    /*
        References:
            - https://developers.google.com/android/guides/tasks
            - https://firebase.google.com/docs/functions/callable
        About:
            Task is an api that represents asynchronous method calls.

            Here we will be using task to start a process to ask the server to register a new uid. This
            uid is randomly generated by the server and will represent the app instance and used to get
            tokens so that the client can authenticate with the server.
     */
    public static Task<String> createNewAccount() {
        return functions
                .getHttpsCallable("createNewAccount")
                .call()
                .continueWith(new Continuation<HttpsCallableResult, String>() {
                    @Override
                    public String then(@NonNull Task<HttpsCallableResult> task) throws Exception {
                        String result = (String) task.getResult().getData();
                        return result;
                    }
                });
    }

    public static Task<String> getCustomToken(String uid) {
        Map<String, Object> data = new HashMap<>();
        data.put("uid", uid);

        return functions
                .getHttpsCallable("getCustomToken")
                .call(data)
                .continueWith(new Continuation<HttpsCallableResult, String>() {
                    @Override
                    public String then(@NonNull Task<HttpsCallableResult> task) throws Exception {
                        String result = (String) task.getResult().getData();
                        return result;
                    }
                });
    }
}
